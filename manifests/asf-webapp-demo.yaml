# Encoding: utf-8
#
# Application: ASF Webapp Demo
# Component: Main
#
# Copyright 2014, Copyright (c) 2014 Grid Dynamics International, Inc. All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

application:
  configuration:
    input.artifact_url: "http://gd-asf.s3.amazonaws.com/petclinic.war"
    input.cookbooks_url: "http://gd-asf.s3.amazonaws.com/webapp_cookbooks.tar.gz"
  interfaces:
    input:
      artifact_url: "bind(workflow#input.artifact_url)"
      cookbooks_url: "bind(workflow#input.cookbooks_url)"
    output:
      webapp_endpoint: "bind(workflow#result.webapp_endpoint)"
      webapp_host_ip: "bind(workflow#result.webapp_host_ip)"

  bindings:
      - [workflow, props]

  components:
    workflow:
      type: workflow.Instance
      interfaces:
        input:
          artifact_url:
            type: configuration(string)
            name: Artifact File URL
          cookbooks_url:
            type: configuration(string)
            name: Cookbooks Tarball URL
        properties:
          nexus_username: consume-signal(string)
          nexus_password: consume-signal(string)
        result:
          webapp_endpoint:
            type: publish-signal(string)
            name: Webapp Endpoint
          webapp_host_ip:
            type: publish-signal(string)
            name: Instance IP
        keypair-store:
          get-keypair: "send-command(string id => object privateKey)"

      required: [ properties ]

      configuration:
        configuration.triggers: {}
        configuration.workflows:
          launch:
            steps:
              - get_env_props:
                  action: getEnvironmentProperties
                  output:
                    env: result

              - start_vm:
                  action: provisionVms
                  parameters:
                    roleName: webapp
                    hardwareId: m1.small
                    quantity: 1
                    retryCount: 1
                    jcloudsProvider: aws-ec2
                    jcloudsEndpoint: https://ec2.us-east-1.amazonaws.com
                    jcloudsRegions: us-east-1
                    jcloudsNodeNamePrefix: asf-webapp-demo
                    vmIdentity: ec2-user
                    imageId: us-east-1/ami-dac845b2
                    ec2SecurityGroup: default
                    providerSettings:
                      userData: "#!/bin/bash\nmkdir -p /etc/chef/ohai/hints\ntouch /etc/chef/ohai/hints/ec2.json"
                  output:
                    webapp_host_ip: ips

              - deploy_webapp:
                  action: chefsolo
                  precedingPhases: [ get_env_props, start_vm ]
                  parameters:
                    roles: [ webapp ]
                    recipeUrl: "{$.cookbooks_url}"
                    runList: [ "recipe[asf-webapp-demo]" ]
                    version: "11.8.2"
                    jattrs:
                      asf-webapp-demo:
                        url: "{$.artifact_url}"
                        auth:
                          username: "{$.env.properties.nexus_username}"
                          password: "{$.env.properties.nexus_password}"

            return:
              webapp_endpoint:
                value: "http://{$.webapp_host_ip[0]}:8080/asf-webapp-demo"
              webapp_host_ip:
                value: "{$.webapp_host_ip[0]}"

          destroy:
            steps:
                - destroy:
                    action: undeployEnv
    props:
      type: reference.Service
      interfaces:
        properties:
          nexus_username: "publish-signal(string)"
          nexus_password: "publish-signal(string)"

